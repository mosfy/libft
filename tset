===== TEST ft_strlen =====
Longueur de 'Hello' = 5

===== TEST ft_memset =====
Before memset(): GeeksForGeeks is for programming geeks.
After memset():  GeeksForGeeks........programming geeks.

===== TEST bzero / ft_bzero =====
Before bzero(): GeeksForGeeks is for programming geeks.
After bzero():  GeeksForGe

Before ft_bzero(): GeeksForGeeks is for programming geeks.
After ft_bzero():  GeeksForGe

===== TEST memcpy / ft_memcpy =====
Value of b before memcpy: 10
Value of b after memcpy:  20

Value of b before ft_memcpy: 10
Value of b after ft_memcpy:  20

Before memcpy(): 123456789
After memcpy():  345676789

Before ft_memcpy(): 123456789
After ft_memcpy():  345676789

===== TEST memmove / ft_memmove =====
Before memmove(): 123456789
After memmove():  345676789

Before ft_memmove(): 123456789
After ft_memmove():  767676789
===== TEST MEMCPY =====

Avant memcpy :    ABCDEFGHIJKLMNOPQRSTUVWXYZ
Après memcpy :    ABCDEABCDEFGHDEFGHNOPGHNOZ

Avant ft_memcpy : ABCDEFGHIJKLMNOPQRSTUVWXYZ
Après ft_memcpy : ABCDEABCDEABCDEABCDEABCDEZ


===== TEST MEMMOVE =====

Avant memmove :    ABCDEFGHIJKLMNOPQRSTUVWXYZ
Après memmove :    ABCDEABCDEFGHIJKLMNOPQRSTZ

Avant ft_memmove : ABCDEFGHIJKLMNOPQRSTUVWXYZ
Après ft_memmove : ABCDEABCDEABCDEABCDEABCDEZ


===== TEST strchr / strrchr =====
strrchr  -> Last 'p' in 'bonjour pour poire' : 'poire'
ft_strrchr -> Last 'p' in 'bonjour pour poire' : 'poire'
strchr  -> First 'p' in 'bonjour pour poire' : 'pour poire'
ft_strchr -> First 'p' in 'bonjour pour poire' : 'pour poire'

===== TEST strncmp / ft_strncmp =====
strncmp(aaa, aaz) = -25
ft_strncmp(aaa, aaz) = -25

strncmp(, k) = -107
ft_strncmp(, k) = -107

===== TEST memchr / ft_memchr =====
Found 30 at index 2 (memchr)
Found 30 at index 2 (ft_memchr)

memchr -> World!
ft_memchr -> World!

===== TEST memcmp / ft_memcmp =====
memcmp(aaa, aaa) = 56
ft_memcmp(aaa, aaa) = 56

memcmp(, k) = -107
ft_memcmp(, k) = -107

memcmp(numbers1, numbers2) = -10
ft_memcmp(numbers1, numbers2) = -10

===== TEST atoi / ft_atoi =====
atoi: 12 -12 12 1 1
ft_atoi: 12 -12 12 1 1

===== TEST calloc / ft_calloc =====
Before calloc: 0 0 0 0 0 0 0 0 0 0 
After calloc: 0 1 2 3 4 5 6 7 8 9 
Before ft_calloc: 0 0 0 0 0 0 0 0 0 0 
After ft_calloc: 0 1 2 3 4 5 6 7 8 9 

===== TEST ft_strnstr =====
ft_strnstr(big, little, 7): jour
ft_strnstr(big, little, 4): (null)

===== TEST strdup / ft_strdup =====
strdup:    Hello libft !
ft_strdup: Hello libft !

===== TEST ft_substr =====
ft_substr(s, 2, 5): llo l
ft_substr(s, 2, 100): llo libft !
ft_substr(s, 50, 5): 
ft_substr(s, -1, -2): 

===== TEST ft_strjoin =====
ft_strjoin('Hello libft !', 'acca   This is another sentence   cccccca') -> Hello libft !acca   This is another sentence   cccccca

===== TEST ft_strtrim =====
ft_strtrim('acca   This is another sentence   cccccca', 'caca') ->    This is another sentence   

===== TEST ft_split =====
ft_split[0]: acca
ft_split[1]: This
ft_split[2]: is
ft_split[3]: another
ft_split[4]: sentence
ft_split[5]: cccccca

===== FIN DES TESTS =====
